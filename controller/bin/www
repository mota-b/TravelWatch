#!/usr/bin/env node


// Module dependencies.
let dotenv = require("dotenv/config"),
  debug = require('debug')('webki-js:server'),
  http = require('http');

// Server manager
let serverManager = {
  
  // Normalising the port
  normalizePort: (val) => {
    let port = parseInt(val, 10);

    if (isNaN(port)) {
      // named pipe
      return val;
    }

    if (port >= 0) {
      // port number
      return port;
    }

    return false;
  },

  // Event listener for HTTP server "error" event.
  onError: (error) => {
    if (error.syscall !== 'listen') {
      throw error;
    }
  
    var bind = typeof port === 'string'
      ? 'Pipe ' + port
      : 'Port ' + port;
  
    // handle specific listen errors with friendly messages
    switch (error.code) {
      case 'EACCES':
        console.error(bind + ' requires elevated privileges');
        process.exit(1);
        break;
      case 'EADDRINUSE':
        console.error(bind + ' is already in use');
        process.exit(1);
        break;
      default:
        throw error;
    }
  },
  
  // Event listener for HTTP server "listening" event.
  onListening: () => {
    console.log("listening on port: ", port);
  
    var addr = server.address();
    var bind = typeof addr === 'string'
      ? 'pipe ' + addr
      : 'port ' + addr.port;
    debug('Listening on ' + bind);
  }  

}

// Express application
let app = require('../express/app'),
  port = serverManager.normalizePort(process.env.PORT || '3000');

app.set('port', port)

// Server config
let server = http.createServer(app);

server.listen(port);
server.on('error', serverManager.onError);
server.on('listening', serverManager.onListening);


